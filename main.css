/*
pug index.pug -w
sass main.scss:main.css -w
*/
:root {
  color-scheme: dark;
  --pixel-size: 4px;
  block-size: 100%;
  user-select: none;
  --color-0: initial;
  --color-1: initial;
  --color-2: initial;
  --columns: initial;
  --rows: initial;
  --canvas-border-width: 1px;
  --background: #111;
}

body {
  color: white;
  background-color: var(--background);
  min-block-size: 100%;
  margin: 0;
  box-sizing: border-box;
  font-family: system-ui, sans-serif;
  display: flex;
  flex-direction: column;
  align-items: center;
}

:where(label) {
  cursor: pointer;
}

:where(h1, p) {
  margin: 0;
}

:where(h1, h2) {
  font-weight: 600;
}

.info-container {
  inline-size: 100%;
  text-align: center;
  box-sizing: border-box;
  background-color: var(--background);
  z-index: 1;
}

.info {
  margin-block-end: 1rem;
  margin-inline: auto;
  display: flex;
  flex-direction: column;
  gap: 0.6rem;
  inline-size: fit-content;
  padding-block: 0.4rem 0.8rem;
  padding-inline: 1rem;
  border: 2px solid dodgerblue;
  border-block-start: none;
  border-end-start-radius: 0.5rem;
  border-end-end-radius: 0.5rem;
  background-color: rgba(30, 144, 255, 0.2);
}

.canvas-container {
  background-color: var(--background);
  inline-size: 100%;
  z-index: 1;
  display: flex;
  justify-content: center;
}
.canvas-container .canvas {
  display: grid;
  grid-template-columns: repeat(var(--columns), 1fr);
  inline-size: fit-content;
  border: var(--canvas-border-width) solid rgba(136, 136, 136, 0.2666666667);
}

.pixel {
  inline-size: var(--pixel-size);
  block-size: var(--pixel-size);
  --play-state-color-0: paused;
  --play-state-color-1: paused;
  --play-state-color-2: paused;
  animation: 0ms linear 1ms forwards var(--play-state-color-0) color-0, 0ms linear 1ms forwards var(--play-state-color-1) color-1, 0ms linear 1ms forwards var(--play-state-color-2) color-2;
}
@keyframes color-0 {
  to {
    border-radius: 50%;
    background-color: var(--color-0);
    box-shadow: 0 0 0 2px var(--color-0);
  }
}
input#color-0[type=radio]:checked ~ .canvas-container .canvas:active .pixel:hover {
  --play-state-color-0: running;
}
@keyframes color-1 {
  to {
    border-radius: 50%;
    background-color: var(--color-1);
    box-shadow: 0 0 0 2px var(--color-1);
  }
}
input#color-1[type=radio]:checked ~ .canvas-container .canvas:active .pixel:hover {
  --play-state-color-1: running;
}
@keyframes color-2 {
  to {
    border-radius: 50%;
    background-color: var(--color-2);
    box-shadow: 0 0 0 2px var(--color-2);
  }
}
input#color-2[type=radio]:checked ~ .canvas-container .canvas:active .pixel:hover {
  --play-state-color-2: running;
}

input[type=radio][name=color] {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

.color-chooser > label[for=color-0] {
  background-image: -moz-element(#color-0-style);
  background-image: element(#color-0-style);
  --color: var(--color-0);
}

input[type=radio][name=color]#color-0:checked ~ .color-chooser > label[for=color-0] {
  box-shadow: inset 0 0 0 3px var(--color);
}
input[type=radio][name=color]#color-0:checked ~ .color-chooser > label[for=color-0]::before {
  box-shadow: inset 0 0 0 1rem var(--color);
}

input[type=radio][name=color]#color-0:focus-visible ~ .color-chooser > label[for=color-0] {
  outline: 2px dotted rgba(255, 255, 255, 0.6666666667);
  outline-offset: -7px;
}

.color-chooser > label[for=color-1] {
  background-image: -moz-element(#color-1-style);
  background-image: element(#color-1-style);
  --color: var(--color-1);
}

input[type=radio][name=color]#color-1:checked ~ .color-chooser > label[for=color-1] {
  box-shadow: inset 0 0 0 3px var(--color);
}
input[type=radio][name=color]#color-1:checked ~ .color-chooser > label[for=color-1]::before {
  box-shadow: inset 0 0 0 1rem var(--color);
}

input[type=radio][name=color]#color-1:focus-visible ~ .color-chooser > label[for=color-1] {
  outline: 2px dotted rgba(255, 255, 255, 0.6666666667);
  outline-offset: -7px;
}

.color-chooser > label[for=color-2] {
  background-image: -moz-element(#color-2-style);
  background-image: element(#color-2-style);
  --color: var(--color-2);
}

input[type=radio][name=color]#color-2:checked ~ .color-chooser > label[for=color-2] {
  box-shadow: inset 0 0 0 3px var(--color);
}
input[type=radio][name=color]#color-2:checked ~ .color-chooser > label[for=color-2]::before {
  box-shadow: inset 0 0 0 1rem var(--color);
}

input[type=radio][name=color]#color-2:focus-visible ~ .color-chooser > label[for=color-2] {
  outline: 2px dotted rgba(255, 255, 255, 0.6666666667);
  outline-offset: -7px;
}

.color-chooser, .color-settings-container {
  --line-height: 3rem;
  --block-size: var(--line-height);
}

.color-chooser, .color-settings {
  display: flex;
  gap: 1rem;
}

.color-settings-container .inner-style-container, .color-chooser > label {
  font-size: 2rem;
  overflow: hidden;
  block-size: var(--block-size);
  line-height: var(--line-height);
  border-radius: 0.3rem;
}

.color-chooser > label {
  display: flex;
  align-items: center;
  border-radius: 0.6rem;
  padding: 0.7rem;
  box-sizing: border-box;
  inline-size: 15rem;
  box-shadow: inset 0 0 0 0px var(--color);
  transition: box-shadow 0.3s;
}
.color-chooser > label::before {
  content: "";
  display: block;
  border-radius: 50%;
  block-size: 100%;
  aspect-ratio: 1;
  box-sizing: border-box;
  box-shadow: inset 0 0 0 3px var(--color);
  transition: box-shadow 0.3s;
}

.color-settings-container .color-settings {
  --distance: calc(var(--canvas-border-width) * 2 + var(--rows) * var(--pixel-size));
}
.color-settings-container .color-settings .outer-style-container {
  box-sizing: border-box;
  --margin-inline-start: 2.5em;
  margin-inline-start: var(--margin-inline-start);
  inline-size: calc(15rem - var(--margin-inline-start));
  outline: 2px solid rgba(136, 136, 136, 0.2);
  outline-offset: -2px;
  border-radius: 0.3rem;
}
.color-settings-container .color-settings .outer-style-container:focus-within {
  background-color: rgba(136, 136, 136, 0.2);
}
@supports not ((background: element(#a)) or (background: -moz-element(#a))) {
  .color-settings-container .color-settings .middle-style-container {
    -webkit-box-reflect: above calc(var(--distance) + var(--block-size));
  }
  .color-settings-container .color-settings .middle-style-container .inner-style-container {
    -webkit-box-reflect: above;
  }
}
.color-settings-container .color-settings .inner-style-container > style {
  box-sizing: border-box;
  margin-block-start: calc(var(--line-height) * -1);
  display: block;
  white-space: pre;
  overflow: hidden;
  padding-inline: 0.3em;
  block-size: 10rem;
}
.color-settings-container .color-settings .inner-style-container > style:focus {
  outline: none;
}

/*# sourceMappingURL=main.css.map */
